<?xml version="1.0" encoding="Shift_JIS" ?>

<project name="sample" default="coverage" basedir=".">
    <!-- 以下を参照して作成 -->
    <!-- http://symfoware.blog68.fc2.com/blog-entry-993.html -->
    <!-- Mainのビルドとjarファイルの作成に必要な情報 -->
    <property name="src" location="main"/>
    <property name="build" location="build"/>
    <property name="dist" location="dist"/>
    <!-- MainTestのビルドに必要な情報 -->
    <property name="test.src" location="test"/>
    <property name="test.build" location="testbuild"/>
    <property name="test.class.name" value="ReviewTest" />
    <property name="report.dir" value="report"/>
    <path id="test.classpath">
        <pathelement location="${build}" />
        <pathelement location="${test.build}" />
        <pathelement location="junit-4.10.jar" />
    </path>
    <!-- Cobertura用 -->
    <property name="convert.dir" location="${test.build}/convert"/>
    <property name="lib.cobertura.dir" location="./lib/cobertura-2.0.3"/>
    <path id="cobertura.lib">
        <fileset dir="${lib.cobertura.dir}">
            <include name="cobertura.jar"/>
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <delete dir ="${report.dir}"/>
        <delete file="cobertura.ser"/>
        <mkdir dir="${build}"/>
        <mkdir dir="${test.build}"/>
    </target>

    <target name="compile" depends="init" description="compile the source " >

        <!-- Mainをビルドし、buildフォルダに出力 -->
        <javac srcdir="${src}" destdir="${build}" includeAntRuntime="no"/>
        <!-- MainTestをビルドし、testbuildフォルダに出力 -->
        <javac srcdir="${test.src}" destdir="${test.build}" includeAntRuntime="no" debug="yes" debuglevel="lines,vars,source" includeantruntime="false">
            <classpath refid="test.classpath" />
        </javac>
    </target>

    <taskdef classpathref="cobertura.lib" resource="tasks.properties"/>
    <target name="instrument" depends="compile">
        <mkdir dir="${convert.dir}"/>
        <cobertura-instrument todir="${convert.dir}">
            <fileset dir="${test.build}">
                <include name="**/*.class"/>
            </fileset>
        </cobertura-instrument>
    </target>

    <property name="report.junit.dir" location="${report.dir}/junit"/>
    <target name="test" depends="instrument" description="test the source " >
        <!-- JUnitによるテストを実行 -->
        <mkdir dir="${report.junit.dir}"/>
        <junit fork="yes" printsummary="yes" haltonfailure="no">
            <sysproperty key="net.sourceforge.cobertura.datafile" file="cobertura.ser"/>
            <test name="${test.class.name}" />
            
            <classpath>
                <path refid="test.classpath"/>
                <pathelement location="${convert.dir}"/>
                <path refid="cobertura.lib"/>
            </classpath>

            <formatter type="xml"/>
            <batchtest fork="yes" todir="${report.junit.dir}">
                <fileset dir="${test.src}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- カバレッジレポートの作成 -->
    <property name="report.cobertura.dir" location="${report.dir}/cobertura"/>
    <target name ="coverage" depends="test" description="make coverage report">
        <mkdir dir="${report.cobertura.dir}"/>
        <cobertura-report format="xml" destdir="${report.cobertura.dir}">
            <fileset dir="${src}">
                <include name="**/*.java"/>
            </fileset>
        </cobertura-report>
    </target>


    <target name="dist" depends="test" description="generate the distribution" >
        <!-- jarファイルの出力先ディレクトリを作成 -->
        <mkdir dir="${dist}"/>
        <!-- sample-yyyymmdd.jarという名前でjarファイルを作成 -->
        <jar jarfile="${dist}/sample-${DSTAMP}.jar" basedir="${build}">
            <manifest>
                <attribute name="Main-Class" value="Review" />
            </manifest>
        </jar>
    </target>
    <target name="clean" description="clean up" >
        <!-- Delete the ${build} and ${dist} directory trees -->

        <delete dir="${build}"/>
        <delete dir ="${test.build}"/>
        <delete dir ="${report.dir}"/>
        <delete file="cobertura.ser"/>
        <delete dir="${dist}"/>
        <delete>
            <fileset dir="." includes="TEST-*"/>
        </delete>
    </target>
</project>
